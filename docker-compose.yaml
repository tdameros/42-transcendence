version: '3'

name: transcendence

services:
    # Front
    front-nginx:
        extends:
            file: front/docker/docker-compose.yaml
            service: front-nginx
        depends_on:
            notification:
                condition: service_healthy
            tournament-nginx:
                condition: service_healthy
            user-management-nginx:
                condition: service_healthy
            pong-server-nginx:
                condition: service_healthy
            user-stats-nginx:
                condition: service_healthy
            crontab:
                condition: service_started
            front-vite:
                condition: service_completed_successfully

    front-vite:
        extends:
            file: front/docker/docker-compose.yaml
            service: front-vite

    # User management
    user-management:
        extends:
            file: user_management/docker/docker-compose.yaml
            service: user-management
        depends_on:
            user-management-db:
                condition: service_healthy
    user-management-db:
        extends:
            file: user_management/docker/docker-compose.yaml
            service: user-management-db
    user-management-nginx:
        extends:
            file: user_management/docker/docker-compose.yaml
            service: user-management-nginx
        depends_on:
            user-management:
                condition: service_healthy

    #User stats
    user-stats:
        extends:
            file: user_stats/docker/docker-compose.yaml
            service: user-stats
        depends_on:
            user-stats-db:
                condition: service_healthy
    user-stats-db:
        extends:
            file: user_stats/docker/docker-compose.yaml
            service: user-stats-db
    user-stats-nginx:
        extends:
            file: user_stats/docker/docker-compose.yaml
            service: user-stats-nginx
        depends_on:
            user-stats:
                condition: service_healthy

    # Matchmaking
    matchmaking:
        extends:
            file: matchmaking/docker/docker-compose.yaml
            service: matchmaking

    # Tournament
    tournament:
        extends:
            file: tournament/docker/docker-compose.yaml
            service: tournament
        depends_on:
            tournament-db:
                condition: service_healthy
    tournament-db:
        extends:
            file: tournament/docker/docker-compose.yaml
            service: tournament-db
    tournament-nginx:
        extends:
            file: tournament/docker/docker-compose.yaml
            service: tournament-nginx
        depends_on:
            tournament:
                condition: service_healthy

    # Server Side Pong
    pong-server:
        extends:
            file: pong_server/docker/docker-compose.yaml
            service: pong-server
        depends_on:
            pong-server-cache:
                condition: service_healthy
    pong-server-cache:
        extends:
            file: pong_server/docker/docker-compose.yaml
            service: pong-server-cache
    pong-server-nginx:
        extends:
            file: pong_server/docker/docker-compose.yaml
            service: pong-server-nginx
        depends_on:
            pong-server:
                condition: service_healthy

    # Notification
    notification:
        extends:
            file: notification/docker/docker-compose.yaml
            service: notification
        depends_on:
            notification-db:
                condition: service_healthy
    notification-db:
        extends:
            file: notification/docker/docker-compose.yaml
            service: notification-db

    # Crontab
    crontab:
        extends:
            file: crontab/docker-compose.yaml
            service: crontab
        depends_on:
            tournament-nginx:
                condition: service_healthy
            user-management-nginx:
                condition: service_healthy
            user-stats-nginx:
                condition: service_healthy
            pong-server-nginx:
                condition: service_healthy
            notification:
                condition: service_healthy


networks:
    front:
        driver: bridge

    user_management:
        driver: bridge

    user_stats:
        driver: bridge

    tournament:
        driver: bridge

    pong_server:
        driver: bridge

    transcendence:
        driver: bridge

    notification:
        driver: bridge


volumes:
    # Front
    front_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: front/app/

    front_dist_volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: front/docker/volumes/dist/

    # User management
    user_management_postgres_volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: user_management/docker/volumes/db/
    user_management_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: user_management/src/
    user_management_media_volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: user_management/docker/volumes/media/

    # User stats
    user_stats_postgres_volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: user_stats/docker/volumes/db/
    user_stats_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: user_stats/src/

    # Matchmaking
    matchmaking_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: matchmaking/src/

    # Tournament
    tournament_postgres_volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: tournament/docker/volumes/db/
    tournament_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: tournament/src/

    # Server Side Pong
    pong_server_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: pong_server/src/

    # Notification
    notification_postgres_volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: notification/docker/volumes/db/
    notification_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: notification/src/

    # Common code
    common_code:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: common

    # SSL certificate
    ssl_certs:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ssl/certs

    # Cron script
    cron_script:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: crontab/script
