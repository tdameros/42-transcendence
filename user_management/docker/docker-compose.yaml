services:
    user-management-nginx:
        networks:
            - transcendence
            - user_management
        build:
            context: nginx
            dockerfile: Dockerfile
        expose:
            - "80"
            - "443"
        ports:
            - "6002:80"
        depends_on:
            - user-management
        volumes:
            - user_management_static_volume:/app/static
            - user_management_media_volume:/app/media
        restart: on-failure


    user-management:
        networks:
            - user_management
        build:
            context: .
            dockerfile: Dockerfile
        command: sh -c "cp -r /app/user_management /app/src &&
                        cp -r /app/common /app/src/common &&
                        python3 src/manage.py makemigrations &&
                        python3 src/manage.py migrate &&
                        gunicorn --chdir src/ user_management.wsgi:application -w 4 -b 0.0.0.0:8000"
        volumes:
            - user_management_code:/app/user_management
            - common_code:/app/common
        expose:
            - "8000"
        depends_on:
            - user-management-db
        restart: on-failure


    user-management-db:
        networks:
            - user_management
        image: postgres:16.0-bookworm
        environment:
            POSTGRES_DB: mydatabase
            POSTGRES_USER: myuser
            POSTGRES_PASSWORD: mypassword
        volumes:
            - user_management_postgres_volume:/var/lib/postgresql/data
        restart: on-failure
